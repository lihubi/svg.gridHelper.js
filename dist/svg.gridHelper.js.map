{"version":3,"file":"svg.gridhelper.js","sources":["../src/svg.gridhelper.js"],"sourcesContent":["import { Svg, SVG, extend } from \"@svgdotjs/svg.js\";\r\n\r\nclass GridHelper {\r\n  draw;\r\n  options;\r\n  gridGroup;\r\n  labelGroup;\r\n  visible;\r\n  labelTemplate;\r\n  parentDraw;\r\n  constructor(parentDraw, options) {\r\n    this.parentDraw = parentDraw; // 保存父绘图引用\r\n\r\n    // 创建一个新的 SVG DOM 并添加到父容器中\r\n    const parentDom = parentDraw.node.parentNode;\r\n    const width = parentDraw.width();\r\n    const height = parentDraw.height();\r\n    // parentDom设置position为relative\r\n    parentDom.style.position = \"relative\";\r\n    this.draw = SVG().addTo(parentDom).size(width, height).css({\r\n      position: \"absolute\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      \"z-index\": \"1\", // 确保在父元素之上\r\n      \"pointer-events\": \"none\", // 穿透交互事件\r\n    });\r\n\r\n    // 默认配置\r\n    this.options = Object.assign(\r\n      {\r\n        gridSize: 100,\r\n        minPixels: 100,\r\n        gridColor: \"gray\",\r\n        labelColor: \"#666\",\r\n        gridStrokeWidth: 1,\r\n        labelFontSize: 12,\r\n        minZoom: 0.1, // 新增最小zoom限制\r\n        maxZoom: 10, // 新增最大zoom限制\r\n        showLabel: true,\r\n      },\r\n      options\r\n    );\r\n\r\n    // 创建标签模板\r\n    this.labelTemplate = this.draw.text(\"\").hide();\r\n\r\n    // 创建网格和标签组\r\n    this.gridGroup = this.draw.group();\r\n    this.labelGroup = this.draw.group();\r\n\r\n    // 初始网格状态\r\n    this.visible = true;\r\n\r\n    // 初始化网格\r\n    this.update();\r\n\r\n    //   setInterval(() => {\r\n    //     this.update();\r\n    //   }, 200);\r\n  }\r\n\r\n  // 计算合适的网格间距\r\n  calculateGridSize() {\r\n    const zoom = this.draw.zoom();\r\n    const minPixels = this.options.minPixels;\r\n    const baseGridSize = this.options.gridSize;\r\n\r\n    // 根据缩放级别调整网格间距\r\n    let gridSize = baseGridSize;\r\n    while (gridSize * zoom < minPixels) {\r\n      gridSize *= 2;\r\n    }\r\n    while (gridSize * zoom > minPixels * 2) {\r\n      gridSize /= 2;\r\n    }\r\n\r\n    return Math.max(gridSize, 5); // 确保最小网格尺寸\r\n  }\r\n\r\n  // 更新网格和标签\r\n  update() {\r\n    // 清除旧的网格和标签\r\n    this.gridGroup.clear();\r\n\r\n    if (!this.visible) return;\r\n\r\n    // 从 parentDraw 获取同步参数\r\n    const zoom = this.parentDraw.zoom();\r\n    const viewbox = this.parentDraw.viewbox();\r\n\r\n    // 使用 parentDraw 的 viewbox 设置当前 draw\r\n    this.draw.viewbox(viewbox.x, viewbox.y, viewbox.width, viewbox.height);\r\n    this.draw.zoom(zoom);\r\n\r\n    const gridSize = this.calculateGridSize();\r\n\r\n    // 获取当前视口位置\r\n    const viewX = viewbox.x;\r\n    const viewY = viewbox.y;\r\n    const viewWidth = viewbox.width;\r\n    const viewHeight = viewbox.height;\r\n\r\n    // 计算网格起点和终点\r\n    const startX = (Math.floor(viewX / gridSize) - 5) * gridSize;\r\n    const endX = (Math.ceil((viewX + viewWidth) / gridSize) + 5) * gridSize;\r\n    const startY = (Math.floor(viewY / gridSize) - 5) * gridSize;\r\n    const endY = (Math.ceil((viewY + viewHeight) / gridSize) + 5) * gridSize;\r\n\r\n    // 绘制网格线\r\n    for (let x = startX; x <= endX; x += gridSize) {\r\n      this.gridGroup.line(x, startY, x, endY).stroke({\r\n        width: this.options.gridStrokeWidth / zoom,\r\n        color: this.options.gridColor,\r\n        opacity: 0.7,\r\n      });\r\n    }\r\n\r\n    for (let y = startY; y <= endY; y += gridSize) {\r\n      this.gridGroup.line(startX, y, endX, y).stroke({\r\n        width: this.options.gridStrokeWidth / zoom,\r\n        color: this.options.gridColor,\r\n        opacity: 0.7,\r\n      });\r\n    }\r\n\r\n    // 绘制刻度标签\r\n    if (this.options.showLabel) {\r\n      this.drawLabels(gridSize, viewX, viewY, viewWidth, viewHeight);\r\n    }\r\n  }\r\n\r\n  // 绘制标签\r\n  drawLabels(gridSize, viewX, viewY, viewWidth, viewHeight) {\r\n    const labelFontSize = this.options.labelFontSize;\r\n\r\n    // 创建标签缓存对象\r\n    const existingLabels = new Map();\r\n    this.labelGroup.children().forEach((label) => {\r\n      const position = label.attr(\"position\");\r\n      const key = `${position}-${label.text()}`;\r\n      existingLabels.set(key, label);\r\n    });\r\n\r\n    // 创建/更新标签的公共方法\r\n    const updateOrCreateLabel = (\r\n      text,\r\n      x,\r\n      y,\r\n      anchor,\r\n      baseline,\r\n      fontSize,\r\n      position\r\n    ) => {\r\n      const key = `${position}-${text}`;\r\n      if (existingLabels.has(key)) {\r\n        const label = existingLabels.get(key);\r\n        label.font(\"size\", fontSize).move(x, y);\r\n        existingLabels.delete(key); // 标记为已使用\r\n      } else {\r\n        this.createLabel(text, x, y, anchor, baseline, fontSize, position);\r\n      }\r\n    };\r\n\r\n    // 计算网格起点和终点\r\n    const startX = (Math.floor(viewX / gridSize) - 5) * gridSize;\r\n    const endX = (Math.ceil((viewX + viewWidth) / gridSize) + 5) * gridSize;\r\n    const startY = (Math.floor(viewY / gridSize) - 5) * gridSize;\r\n    const endY = (Math.ceil((viewY + viewHeight) / gridSize) + 5) * gridSize;\r\n\r\n    //根据zoom缩放文字大小\r\n    const zoom = this.draw.zoom();\r\n    const scale = 1 / zoom;\r\n    // const fontSize = labelFontSize * scale; //设置字体大小\r\n    const fontSize = labelFontSize * scale; //设置字体大小\r\n    const singleNumberWidth = this.getNumberWidth();\r\n\r\n    // 上边缘标签\r\n    for (let x = startX; x <= endX; x += gridSize) {\r\n      const screenX = x;\r\n      const textWidth = x.toString().length * singleNumberWidth;\r\n      // this.createLabel(x.toString(), screenX - textWidth / 2, viewY, 'middle', 'auto', fontSize);\r\n      updateOrCreateLabel(\r\n        x.toString(),\r\n        screenX - textWidth / 2,\r\n        viewY,\r\n        \"middle\",\r\n        \"auto\",\r\n        fontSize,\r\n        \"top\"\r\n      );\r\n    }\r\n\r\n    // // 下边缘标签\r\n    for (let x = startX; x <= endX; x += gridSize) {\r\n      const screenX = x;\r\n      const textWidth = x.toString().length * singleNumberWidth;\r\n      // this.createLabel(x.toString(), screenX - textWidth / 2, viewHeight - fontSize + viewY, 'middle', 'auto', fontSize);\r\n      updateOrCreateLabel(\r\n        x.toString(),\r\n        screenX - textWidth / 2,\r\n        viewHeight - fontSize + viewY,\r\n        \"middle\",\r\n        \"auto\",\r\n        fontSize,\r\n        \"bottom\"\r\n      );\r\n    }\r\n\r\n    // 左边缘标签\r\n    for (let y = startY; y <= endY; y += gridSize) {\r\n      const screenY = y;\r\n      // this.createLabel(y.toString(), viewX, screenY - fontSize / 2, 'start', 'middle', fontSize);\r\n      updateOrCreateLabel(\r\n        y.toString(),\r\n        viewX,\r\n        screenY - fontSize / 2,\r\n        \"start\",\r\n        \"middle\",\r\n        fontSize,\r\n        \"left\"\r\n      );\r\n    }\r\n\r\n    // 右边缘标签\r\n    for (let y = startY; y <= endY; y += gridSize) {\r\n      const screenY = y;\r\n      const textWidth = y.toString().length * singleNumberWidth;\r\n      // this.createLabel(y.toString(), viewWidth + viewX - textWidth, screenY - fontSize / 2, 'end', 'middle', fontSize);\r\n      updateOrCreateLabel(\r\n        y.toString(),\r\n        viewX + viewWidth - textWidth,\r\n        screenY - fontSize / 2,\r\n        \"end\",\r\n        \"middle\",\r\n        fontSize,\r\n        \"right\"\r\n      );\r\n    }\r\n\r\n    // 删除未使用的旧标签\r\n    existingLabels.forEach((label) => label.remove());\r\n  }\r\n\r\n  // 创建标签元素\r\n  createLabel(text, x, y, anchor, baseline, fontSize, position) {\r\n    const label = this.labelTemplate\r\n      .clone()\r\n      .text(text)\r\n      .font({\r\n        size: fontSize,\r\n        family: \"Arial, sans-serif\",\r\n      })\r\n      .fill(this.options.labelColor)\r\n      .attr({\r\n        \"text-anchor\": anchor,\r\n        \"dominant-baseline\": baseline,\r\n        \"pointer-events\": \"none\",\r\n        style: \"user-select: none;\",\r\n        position,\r\n      })\r\n      .move(x, y)\r\n      .show();\r\n\r\n    this.labelGroup.add(label);\r\n\r\n    // 将标签置于背景之上\r\n    label.front();\r\n  }\r\n\r\n  // 显示/隐藏网格\r\n  toggle(visible) {\r\n    if (visible !== undefined) {\r\n      this.visible = visible;\r\n    } else {\r\n      this.visible = !this.visible;\r\n    }\r\n\r\n    if (this.visible) {\r\n      this.gridGroup.show();\r\n      this.labelGroup.show();\r\n      this.update();\r\n    } else {\r\n      this.gridGroup.hide();\r\n      this.labelGroup.hide();\r\n    }\r\n  }\r\n\r\n  // 更新配置\r\n  updateOptions(options) {\r\n    Object.assign(this.options, options);\r\n    this.update();\r\n  }\r\n\r\n  //计算单个数字宽度\r\n  getNumberWidth() {\r\n    //根据zoom缩放文字大小\r\n    const zoom = this.draw.zoom();\r\n    const scale = 1 / zoom;\r\n    const labelFontSize = this.options.labelFontSize;\r\n    const fontSize = labelFontSize * scale; //设置字体大小\r\n    // 创建临时文本测量\r\n    const tempText = this.labelTemplate\r\n      .clone()\r\n      .text('0')\r\n      .font({\r\n        size: fontSize,\r\n        family: \"Arial, sans-serif\",\r\n      })\r\n\r\n    const bbox = tempText.bbox();\r\n    \r\n    // 立即移除临时元素\r\n    tempText.remove();\r\n    return bbox.width;\r\n  }\r\n\r\n  resize() {\r\n    // 获取父容器最新尺寸\r\n    const width = this.parentDraw.width();\r\n    const height = this.parentDraw.height();\r\n\r\n    // 更新当前绘图尺寸\r\n    this.draw.size(width, height);\r\n\r\n    // 触发网格更新\r\n    this.update();\r\n  }\r\n\r\n  destroy() {\r\n    this.gridGroup.remove();\r\n    this.labelGroup.remove();\r\n  }\r\n}\r\n\r\nextend(Svg, {\r\n  gridHelper(options) {\r\n    const gridHelper = new GridHelper(this, options);\r\n    this.gridHelper = gridHelper;\r\n    return this;\r\n  },\r\n});\r\n"],"names":["GridHelper","parentDraw","options","__publicField","parentDom","width","height","SVG","zoom","minPixels","gridSize","viewbox","viewX","viewY","viewWidth","viewHeight","startX","endX","startY","endY","x","y","labelFontSize","existingLabels","label","key","updateOrCreateLabel","text","anchor","baseline","fontSize","position","scale","singleNumberWidth","screenX","textWidth","screenY","visible","tempText","bbox","svg_js","Svg","gridHelper"],"mappings":";;;;;;;;;uPAEA,MAAMA,CAAW,CAQf,YAAYC,EAAYC,EAAS,CAPjCC,EAAA,aACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,gBACAA,EAAA,sBACAA,EAAA,mBAEE,KAAK,WAAaF,EAGlB,MAAMG,EAAYH,EAAW,KAAK,WAC5BI,EAAQJ,EAAW,QACnBK,EAASL,EAAW,SAE1BG,EAAU,MAAM,SAAW,WAC3B,KAAK,KAAOG,MAAK,EAAC,MAAMH,CAAS,EAAE,KAAKC,EAAOC,CAAM,EAAE,IAAI,CACzD,SAAU,WACV,IAAK,IACL,KAAM,IACN,UAAW,IACX,iBAAkB,MACxB,CAAK,EAGD,KAAK,QAAU,OAAO,OACpB,CACE,SAAU,IACV,UAAW,IACX,UAAW,OACX,WAAY,OACZ,gBAAiB,EACjB,cAAe,GACf,QAAS,GACT,QAAS,GACT,UAAW,EACZ,EACDJ,CACN,EAGI,KAAK,cAAgB,KAAK,KAAK,KAAK,EAAE,EAAE,OAGxC,KAAK,UAAY,KAAK,KAAK,MAAK,EAChC,KAAK,WAAa,KAAK,KAAK,MAAK,EAGjC,KAAK,QAAU,GAGf,KAAK,OAAM,CAKZ,CAGD,mBAAoB,CAClB,MAAMM,EAAO,KAAK,KAAK,KAAI,EACrBC,EAAY,KAAK,QAAQ,UAI/B,IAAIC,EAHiB,KAAK,QAAQ,SAIlC,KAAOA,EAAWF,EAAOC,GACvBC,GAAY,EAEd,KAAOA,EAAWF,EAAOC,EAAY,GACnCC,GAAY,EAGd,OAAO,KAAK,IAAIA,EAAU,CAAC,CAC5B,CAGD,QAAS,CAIP,GAFA,KAAK,UAAU,QAEX,CAAC,KAAK,QAAS,OAGnB,MAAMF,EAAO,KAAK,WAAW,KAAI,EAC3BG,EAAU,KAAK,WAAW,QAAO,EAGvC,KAAK,KAAK,QAAQA,EAAQ,EAAGA,EAAQ,EAAGA,EAAQ,MAAOA,EAAQ,MAAM,EACrE,KAAK,KAAK,KAAKH,CAAI,EAEnB,MAAME,EAAW,KAAK,oBAGhBE,EAAQD,EAAQ,EAChBE,EAAQF,EAAQ,EAChBG,EAAYH,EAAQ,MACpBI,EAAaJ,EAAQ,OAGrBK,GAAU,KAAK,MAAMJ,EAAQF,CAAQ,EAAI,GAAKA,EAC9CO,GAAQ,KAAK,MAAML,EAAQE,GAAaJ,CAAQ,EAAI,GAAKA,EACzDQ,GAAU,KAAK,MAAML,EAAQH,CAAQ,EAAI,GAAKA,EAC9CS,GAAQ,KAAK,MAAMN,EAAQE,GAAcL,CAAQ,EAAI,GAAKA,EAGhE,QAASU,EAAIJ,EAAQI,GAAKH,EAAMG,GAAKV,EACnC,KAAK,UAAU,KAAKU,EAAGF,EAAQE,EAAGD,CAAI,EAAE,OAAO,CAC7C,MAAO,KAAK,QAAQ,gBAAkBX,EACtC,MAAO,KAAK,QAAQ,UACpB,QAAS,EACjB,CAAO,EAGH,QAASa,EAAIH,EAAQG,GAAKF,EAAME,GAAKX,EACnC,KAAK,UAAU,KAAKM,EAAQK,EAAGJ,EAAMI,CAAC,EAAE,OAAO,CAC7C,MAAO,KAAK,QAAQ,gBAAkBb,EACtC,MAAO,KAAK,QAAQ,UACpB,QAAS,EACjB,CAAO,EAIC,KAAK,QAAQ,WACf,KAAK,WAAWE,EAAUE,EAAOC,EAAOC,EAAWC,CAAU,CAEhE,CAGD,WAAWL,EAAUE,EAAOC,EAAOC,EAAWC,EAAY,CACxD,MAAMO,EAAgB,KAAK,QAAQ,cAG7BC,EAAiB,IAAI,IAC3B,KAAK,WAAW,SAAU,EAAC,QAASC,GAAU,CAE5C,MAAMC,EAAM,GADKD,EAAM,KAAK,UAAU,CACf,IAAIA,EAAM,KAAM,CAAA,GACvCD,EAAe,IAAIE,EAAKD,CAAK,CACnC,CAAK,EAGD,MAAME,EAAsB,CAC1BC,EACAP,EACAC,EACAO,EACAC,EACAC,EACAC,IACG,CACH,MAAMN,EAAM,GAAGM,CAAQ,IAAIJ,CAAI,GAC3BJ,EAAe,IAAIE,CAAG,GACVF,EAAe,IAAIE,CAAG,EAC9B,KAAK,OAAQK,CAAQ,EAAE,KAAKV,EAAGC,CAAC,EACtCE,EAAe,OAAOE,CAAG,GAEzB,KAAK,YAAYE,EAAMP,EAAGC,EAAGO,EAAQC,EAAUC,EAAUC,CAAQ,CAEzE,EAGUf,GAAU,KAAK,MAAMJ,EAAQF,CAAQ,EAAI,GAAKA,EAC9CO,GAAQ,KAAK,MAAML,EAAQE,GAAaJ,CAAQ,EAAI,GAAKA,EACzDQ,GAAU,KAAK,MAAML,EAAQH,CAAQ,EAAI,GAAKA,EAC9CS,GAAQ,KAAK,MAAMN,EAAQE,GAAcL,CAAQ,EAAI,GAAKA,EAI1DsB,EAAQ,EADD,KAAK,KAAK,KAAI,EAGrBF,EAAWR,EAAgBU,EAC3BC,EAAoB,KAAK,iBAG/B,QAASb,EAAIJ,EAAQI,GAAKH,EAAMG,GAAKV,EAAU,CAC7C,MAAMwB,EAAUd,EACVe,EAAYf,EAAE,SAAQ,EAAG,OAASa,EAExCP,EACEN,EAAE,SAAU,EACZc,EAAUC,EAAY,EACtBtB,EACA,SACA,OACAiB,EACA,KACR,CACK,CAGD,QAASV,EAAIJ,EAAQI,GAAKH,EAAMG,GAAKV,EAAU,CAC7C,MAAMwB,EAAUd,EACVe,EAAYf,EAAE,SAAQ,EAAG,OAASa,EAExCP,EACEN,EAAE,SAAU,EACZc,EAAUC,EAAY,EACtBpB,EAAae,EAAWjB,EACxB,SACA,OACAiB,EACA,QACR,CACK,CAGD,QAAST,EAAIH,EAAQG,GAAKF,EAAME,GAAKX,EAAU,CAC7C,MAAM0B,EAAUf,EAEhBK,EACEL,EAAE,SAAU,EACZT,EACAwB,EAAUN,EAAW,EACrB,QACA,SACAA,EACA,MACR,CACK,CAGD,QAAST,EAAIH,EAAQG,GAAKF,EAAME,GAAKX,EAAU,CAC7C,MAAM0B,EAAUf,EACVc,EAAYd,EAAE,SAAQ,EAAG,OAASY,EAExCP,EACEL,EAAE,SAAU,EACZT,EAAQE,EAAYqB,EACpBC,EAAUN,EAAW,EACrB,MACA,SACAA,EACA,OACR,CACK,CAGDP,EAAe,QAASC,GAAUA,EAAM,OAAQ,CAAA,CACjD,CAGD,YAAYG,EAAMP,EAAGC,EAAGO,EAAQC,EAAUC,EAAUC,EAAU,CAC5D,MAAMP,EAAQ,KAAK,cAChB,MAAO,EACP,KAAKG,CAAI,EACT,KAAK,CACJ,KAAMG,EACN,OAAQ,mBAChB,CAAO,EACA,KAAK,KAAK,QAAQ,UAAU,EAC5B,KAAK,CACJ,cAAeF,EACf,oBAAqBC,EACrB,iBAAkB,OAClB,MAAO,qBACP,SAAAE,CACR,CAAO,EACA,KAAKX,EAAGC,CAAC,EACT,OAEH,KAAK,WAAW,IAAIG,CAAK,EAGzBA,EAAM,MAAK,CACZ,CAGD,OAAOa,EAAS,CACVA,IAAY,OACd,KAAK,QAAUA,EAEf,KAAK,QAAU,CAAC,KAAK,QAGnB,KAAK,SACP,KAAK,UAAU,OACf,KAAK,WAAW,OAChB,KAAK,OAAM,IAEX,KAAK,UAAU,OACf,KAAK,WAAW,OAEnB,CAGD,cAAcnC,EAAS,CACrB,OAAO,OAAO,KAAK,QAASA,CAAO,EACnC,KAAK,OAAM,CACZ,CAGD,gBAAiB,CAGf,MAAM8B,EAAQ,EADD,KAAK,KAAK,KAAI,EAGrBF,EADgB,KAAK,QAAQ,cACFE,EAE3BM,EAAW,KAAK,cACnB,MAAO,EACP,KAAK,GAAG,EACR,KAAK,CACJ,KAAMR,EACN,OAAQ,mBAChB,CAAO,EAEGS,EAAOD,EAAS,OAGtB,OAAAA,EAAS,OAAM,EACRC,EAAK,KACb,CAED,QAAS,CAEP,MAAMlC,EAAQ,KAAK,WAAW,MAAK,EAC7BC,EAAS,KAAK,WAAW,OAAM,EAGrC,KAAK,KAAK,KAAKD,EAAOC,CAAM,EAG5B,KAAK,OAAM,CACZ,CAED,SAAU,CACR,KAAK,UAAU,SACf,KAAK,WAAW,QACjB,CACH,CAEMkC,EAAA,OAACC,MAAK,CACV,WAAWvC,EAAS,CAClB,MAAMwC,EAAa,IAAI1C,EAAW,KAAME,CAAO,EAC/C,YAAK,WAAawC,EACX,IACR,CACH,CAAC"}